{"version":3,"sources":["utilities/utilities.js","contexts/appContext.js","components/ProcessAudio.js","components/Header.js","App.js","index.js"],"names":["downsampleBuffer","buffer","recordSampleRate","targetSampleRate","Error","sampleRateRatio","newLength","Math","round","length","result","Float32Array","offsetResult","offsetBuffer","nextOffsetBuffer","accum","count","i","AppContext","createContext","GlobalContext","useContext","AppContextProvider","children","useState","labels","setLabels","model","setModel","start","setStart","top5","setTop5","useEffect","fetch","then","response","text","json","split","map","array","undefined","prevState","a","tf","fromTFHub","loadModel","Provider","value","ProcessAudio","error","setError","audio_stack","audioContext","useRef","handleSuccess","stream","current","AudioContext","latencyHint","source","createMediaStreamSource","processor","createScriptProcessor","channelInterpretation","channelCount","connect","destination","onaudioprocess","e","inputData","inputBuffer","getChannelData","downsampledBuffer","sampleRate","push","reduce","acc","curr","from","input","predict","scores","mean","topk","values","indices","indexs","toString","re","replace","data","Number","handleError","err","navigator","mediaDevices","getUserMedia","audio","video","catch","close","console","log","Container","Alert","variant","Card","Header","ListGroup","item","index","Item","key","Navbar","bg","expand","collapseOnSelect","to","Brand","className","Nav","Link","onClick","disabled","Button","Spinner","as","animation","size","role","aria-hidden","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94abe0ed.chunk.js","sourcesContent":["export const downsampleBuffer = (\n  buffer,\n  recordSampleRate,\n  targetSampleRate\n) => {\n  if (targetSampleRate === recordSampleRate) return buffer;\n  if (targetSampleRate > recordSampleRate)\n    throw new Error(\n      \"Target sample rate must be lower than recorded sample rate\"\n    );\n\n  const sampleRateRatio = recordSampleRate / targetSampleRate;\n  const newLength = Math.round(buffer.length / sampleRateRatio);\n  const result = new Float32Array(newLength);\n\n  let offsetResult = 0;\n  let offsetBuffer = 0;\n\n  while (offsetResult < result.length) {\n    let nextOffsetBuffer = Math.round((offsetResult + 1) * sampleRateRatio);\n    let accum = 0;\n    let count = 0;\n\n    for (let i = offsetBuffer; i < nextOffsetBuffer && i < buffer.length; i++) {\n      accum += buffer[i];\n      count++;\n    }\n\n    result[offsetResult] = accum / count;\n    offsetResult++;\n    offsetBuffer = nextOffsetBuffer;\n  }\n\n  return result;\n};\n\nexport const normalize = (data) => {\n  // Normalizing the data\n  const absValue = data.map((sample) => {\n    return Math.abs(sample);\n  });\n  const maxValue = Math.max(...absValue);\n  const normalized = data.map((sample) => {\n    return sample / maxValue;\n  });\n  return normalized;\n};\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nconst AppContext = createContext();\n\nexport const GlobalContext = () => {\n  return useContext(AppContext);\n};\n\nconst AppContextProvider = ({ children }) => {\n  //   Constant for APP\n  const MODEL_URL = \"https://tfhub.dev/google/tfjs-model/yamnet/tfjs/1\";\n  const CLASS_MAP_URL =\n    \"https://raw.githubusercontent.com/rizwanishaq/event-detection-tensorflow/main/src/yamnet_class_map.csv\";\n\n  const [labels, setLabels] = useState({});\n  const [model, setModel] = useState(null);\n  const [start, setStart] = useState(false);\n  const [top5, setTop5] = useState([]);\n\n  useEffect(() => {\n    fetch(CLASS_MAP_URL)\n      .then((response) => response.text())\n      .then((json) => {\n        const labelarray = json.split(\"\\n\");\n        // eslint-disable-next-line\n        labelarray.map((array) => {\n          const split = array.split(\",\");\n\n          if (split[0] !== \"index\" && split !== undefined) {\n            setLabels((prevState) => ({\n              ...prevState,\n              [split[0]]: split[2],\n            }));\n          }\n        });\n      });\n  }, []);\n\n  useEffect(() => {\n    const loadModel = async () => {\n      const model = await tf.loadGraphModel(MODEL_URL, {\n        fromTFHub: true,\n      });\n      setModel(model);\n    };\n    loadModel();\n  }, []);\n\n  return (\n    <AppContext.Provider\n      value={{\n        labels,\n        model,\n        start,\n        setStart,\n        top5,\n        setTop5,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\nexport default AppContextProvider;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport { downsampleBuffer } from \"../utilities/utilities\";\nimport { GlobalContext } from \"../contexts/appContext\";\nimport { Card, ListGroup, Container, Alert } from \"react-bootstrap\";\nconst ProcessAudio = () => {\n  const { labels, model, top5, setTop5 } = GlobalContext();\n  const NUM_INPUT_SAMPLES = 1024;\n  const MODEL_SAMPLE_RATE = 16000;\n\n  const [error, setError] = useState(\"\");\n\n  let audio_stack = [];\n\n  const audioContext = useRef(null);\n  const handleSuccess = (stream) => {\n    audioContext.current = new AudioContext({\n      latencyHint: \"playback\",\n    });\n\n    const source = audioContext.current.createMediaStreamSource(stream);\n    const processor = audioContext.current.createScriptProcessor(\n      NUM_INPUT_SAMPLES,\n      1,\n      1\n    );\n    // Converts audio to mono.\n    processor.channelInterpretation = \"speakers\";\n    processor.channelCount = 1;\n\n    // Runs processor on audio source.\n    source.connect(processor);\n\n    processor.connect(audioContext.current.destination);\n\n    processor.onaudioprocess = async (e) => {\n      const inputData = e.inputBuffer.getChannelData(0);\n      const downsampledBuffer = downsampleBuffer(\n        inputData,\n        audioContext.current.sampleRate,\n        MODEL_SAMPLE_RATE\n      );\n      audio_stack.push(downsampledBuffer);\n      if (audio_stack.length === 16) {\n        const inputData = audio_stack.reduce((acc, curr) =>\n          Float32Array.from([...acc, ...curr])\n        );\n\n        // inputData_n = normalize(inputData)\n\n        const input = tf.tensor(inputData);\n        // eslint-disable-next-line\n        const [scores, embeddings, spectrogram] = model.predict(input);\n        audio_stack = [];\n\n        // eslint-disable-next-line\n        const { values, indices } = await scores.mean(0).topk(5);\n        const indexs = indices.toString().split(\"\\n\")[1];\n\n        const re = indexs\n          .replace(\"[\", \"\")\n          .replace(\"]\", \"\")\n          .split(\",\")\n          .map((data) => labels[Number(data)]);\n\n        setTop5(re);\n      }\n    };\n  };\n\n  const handleError = (err) => {\n    setError(err);\n  };\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ audio: true, video: false })\n      .then(handleSuccess)\n      .catch(handleError);\n\n    return () => {\n      audioContext.current && audioContext.current.close();\n      setTop5([]);\n      console.log(\"Component unmounted\");\n    };\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <Container>\n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      <Card>\n        <Card.Header>Detected Events</Card.Header>\n        <ListGroup>\n          {top5.map((item, index) => (\n            <ListGroup.Item key={index} variant={index === 0 ? \"success\" : \"\"}>\n              {item}\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      </Card>\n    </Container>\n  );\n};\n\nexport default ProcessAudio;\n","import React from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Navbar, Nav, Container, Button, Spinner } from \"react-bootstrap\";\nimport { GlobalContext } from \"../contexts/appContext\";\n\nconst Header = () => {\n  const { start, setStart, model } = GlobalContext();\n\n  const stopHandler = (e) => {\n    setStart(false);\n  };\n\n  const startHandler = (e) => {\n    setStart(true);\n  };\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>\n              <i className=\"fas fa-home\"></i>\n            </Navbar.Brand>\n          </LinkContainer>\n\n          <Nav className=\"ml-auto\">\n            {model ? (\n              <>\n                <Nav.Link onClick={startHandler} disabled={start}>\n                  <i className=\"fas fa-play\"></i>Start\n                </Nav.Link>\n                <Nav.Link onClick={stopHandler} disabled={!start}>\n                  <i className=\"fas fa-stop-circle\"></i>Stop\n                </Nav.Link>{\" \"}\n              </>\n            ) : (\n              <Button variant=\"primary\" disabled>\n                <Spinner\n                  as=\"span\"\n                  animation=\"grow\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                />\n                model loading...\n              </Button>\n            )}\n          </Nav>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport ProcessAudio from \"./components/ProcessAudio\";\nimport Header from \"./components/Header\";\nimport { GlobalContext } from \"./contexts/appContext\";\nimport { Container } from \"react-bootstrap\";\n\nfunction App() {\n  const { model, start } = GlobalContext();\n  return (\n    <Router>\n      <Header />\n      <Container>{model && start && <ProcessAudio />}</Container>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport App from \"./App\";\nimport AppContextProvider from \"./contexts/appContext\";\n\nReactDOM.render(\n  <AppContextProvider>\n    <App />\n  </AppContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}